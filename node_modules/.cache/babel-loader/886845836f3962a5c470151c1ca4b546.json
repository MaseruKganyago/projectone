{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, createContext, useContext } from 'react';\nvar FuelWiseContext = createContext();\nvar FuelWiseActionsContext = createContext();\n/* eslint-disable */\n\nvar factoryUseContext = function factoryUseContext(title, context) {\n  return function () {\n    var ctx = useContext(context);\n\n    if (ctx === undefined) {\n      throw new Error(\"use\".concat(title, \"Context must be used withing a \").concat(title, \"ContextProvider.\"));\n    }\n\n    return ctx;\n  };\n};\n/* eslint-enable */\n\n\nexport var useFuelWiseContext = factoryUseContext('FuelWiseContext', FuelWiseContext);\nexport var useFuelWiseActionsContext = factoryUseContext('FuelWiseActionsContext', FuelWiseActionsContext);\n\nvar FuelWiseContextProvider = function FuelWiseContextProvider(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFuelWiseOn = _useState2[0],\n      setFuelWise = _useState2[1];\n\n  return React.createElement(FuelWiseContext.Provider, {\n    value: isFuelWiseOn\n  }, React.createElement(FuelWiseActionsContext.Provider, {\n    value: setFuelWise\n  }, props.children));\n};\n\nexport default FuelWiseContextProvider;","map":{"version":3,"sources":["C:/Users/User/Documents/projectone/api/fuelWiseContext.js"],"names":["React","useState","createContext","useContext","FuelWiseContext","FuelWiseActionsContext","factoryUseContext","title","context","ctx","undefined","Error","useFuelWiseContext","useFuelWiseActionsContext","FuelWiseContextProvider","props","isFuelWiseOn","setFuelWise","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAAyD,OAAzD;AAEA,IAAMC,eAAe,GAAGF,aAAa,EAArC;AACA,IAAMG,sBAAsB,GAAGH,aAAa,EAA5C;AAEA;;AACA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAC5C,SAAO,YAAM;AACb,QAAMC,GAAG,GAAGN,UAAU,CAACK,OAAD,CAAtB;;AACE,QAAIC,GAAG,KAAKC,SAAZ,EAAuB;AACrB,YAAM,IAAIC,KAAJ,cAAgBJ,KAAhB,4CAAuDA,KAAvD,sBAAN;AACD;;AACD,WAAOE,GAAP;AACD,GAND;AAOD,CARD;AASA;;;AAEA,OAAO,IAAMG,kBAAkB,GAAGN,iBAAiB,CAAC,iBAAD,EAAoBF,eAApB,CAA5C;AACP,OAAO,IAAMS,yBAAyB,GAAGP,iBAAiB,CAAC,wBAAD,EAA2BD,sBAA3B,CAAnD;;AAEP,IAAMS,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAW;AAAA,kBACLd,QAAQ,CAAC,KAAD,CADH;AAAA;AAAA,MAClCe,YADkC;AAAA,MACpBC,WADoB;;AAGzC,SACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAED;AAAjC,KACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEC;AAAxC,KACCF,KAAK,CAACG,QADP,CADF,CADJ;AAOD,CAVD;;AAYA,eAAeJ,uBAAf","sourcesContent":["import React, {useState, createContext, useContext} from 'react'\r\n\r\nconst FuelWiseContext = createContext()\r\nconst FuelWiseActionsContext = createContext()\r\n\r\n/* eslint-disable */\r\nconst factoryUseContext = (title, context) => {\r\n  return () => {\r\n  const ctx = useContext(context)\r\n    if (ctx === undefined) {\r\n      throw new Error(`use${title}Context must be used withing a ${title}ContextProvider.`)\r\n    }\r\n    return ctx\r\n  }\r\n}\r\n/* eslint-enable */\r\n\r\nexport const useFuelWiseContext = factoryUseContext('FuelWiseContext', FuelWiseContext)\r\nexport const useFuelWiseActionsContext = factoryUseContext('FuelWiseActionsContext', FuelWiseActionsContext)\r\n\r\nconst FuelWiseContextProvider = (props) => {\r\n  const [isFuelWiseOn, setFuelWise] = useState(false)\r\n\r\n  return (\r\n      <FuelWiseContext.Provider value={isFuelWiseOn}>\r\n        <FuelWiseActionsContext.Provider value={setFuelWise}>\r\n        {props.children}\r\n        </FuelWiseActionsContext.Provider>\r\n      </FuelWiseContext.Provider>\r\n  );\r\n}\r\n\r\nexport default FuelWiseContextProvider"]},"metadata":{},"sourceType":"module"}