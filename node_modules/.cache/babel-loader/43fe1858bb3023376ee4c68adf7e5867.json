{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { useMutate } from 'restful-react';\n\nvar RegisterAPI = function RegisterAPI(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmpassword = _useState6[0],\n      setConfirmpassword = _useState6[1];\n\n  var handleSubmit = function handleSubmit() {\n    var _useMutate = useMutate({\n      verb: 'POST',\n      path: 'https://localhost:44352/api/Account/Register'\n    }),\n        loginUserHttp = _useMutate.mutate;\n\n    loginUserHttp({\n      email: username,\n      password: password,\n      confirmpassword: confirmpassword\n    }).then(function (data) {\n      return console.log(data);\n    }).catch(function (err) {\n      return console.log(err.data);\n    });\n  };\n\n  var getFieldDecorator = props.form.getFieldDecorator;\n  var formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 8\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 16\n      }\n    }\n  };\n  var tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 8\n      }\n    }\n  };\n  return React.createElement(_Form, _extends({}, formItemLayout, {\n    onSubmit: handleSubmit\n  }), React.createElement(_Form.Item, {\n    label: \"E-mail\"\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }]\n  }), React.createElement(_Input, {\n    value: username,\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    }\n  })), React.createElement(_Form.Item, {\n    label: \"Password\",\n    hasFeedback: true\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }]\n  }), React.createElement(_Input.Password, {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    }\n  })), React.createElement(_Form.Item, {\n    label: \"Confirm Password\",\n    hasFeedback: true\n  }, getFieldDecorator('confirm', {\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }]\n  })(React.createElement(_Input.Password, {\n    value: confirmpassword,\n    onChange: function onChange(e) {\n      return setConfirmpassword(e.target.value);\n    }\n  }))), React.createElement(_Form.Item, tailFormItemLayout, React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Register\")));\n};\n\nvar WrappedRegisterAPI = _Form.create({\n  name: 'register_api'\n})(RegisterAPI);\n\nexport default WrappedRegisterAPI;","map":{"version":3,"sources":["C:/Users/User/Documents/projectone/api/register.tsx"],"names":["React","useState","useMutate","RegisterAPI","props","username","setUsername","password","setPassword","confirmpassword","setConfirmpassword","handleSubmit","verb","path","loginUserHttp","mutate","email","then","data","console","log","catch","err","getFieldDecorator","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","type","message","required","e","target","value","WrappedRegisterAPI","create","name"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, } from 'antd';\r\nimport { useMutate } from 'restful-react';\r\n\r\ninterface IProps {\r\n    readonly form?: any;\r\n  }\r\n  \r\n\r\nconst RegisterAPI: FC<IProps> = (props) => {\r\n  \r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmpassword, setConfirmpassword] = useState('');\r\n    const handleSubmit = () => {\r\n      const { mutate: loginUserHttp } = useMutate({ verb: 'POST', path: 'https://localhost:44352/api/Account/Register' });\r\n\r\n      loginUserHttp({\r\n        email: username,\r\n        password,\r\n        confirmpassword\r\n      })\r\n        .then(data => console.log(data))\r\n        .catch(err => console.log(err.data))\r\n    }  \r\n    const { getFieldDecorator } = props.form;\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 8 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n      };\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n    return (\r\n        <Form {...formItemLayout} onSubmit={handleSubmit}>\r\n        <Form.Item label=\"E-mail\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })}\r\n          <Input\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Password\" hasFeedback>\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ],\r\n          })}\r\n          <Input.Password \r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator('confirm', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n            ],\r\n          })(<Input.Password \r\n            value={confirmpassword}\r\n            onChange={e => setConfirmpassword(e.target.value)}\r\n          />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n}\r\nconst WrappedRegisterAPI = Form.create({ name: 'register_api' })(RegisterAPI);\r\nexport default WrappedRegisterAPI;"]},"metadata":{},"sourceType":"module"}