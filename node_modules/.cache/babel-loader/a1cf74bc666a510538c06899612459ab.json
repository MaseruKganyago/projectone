{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react'; // import axios from 'axios';\n// const BASE_URL = \"https://localhost:44352/api\";\n// export default function fetchAllFuelWiseApi() {\n// axios\n//   .get(`${BASE_URL}/fuelwise`)\n//   .then(response => response)\n//   .catch(error => error.response);\n// }\n\nvar FuelwiseList = function FuelwiseList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Tips = _useState2[0],\n      setTips = _useState2[1];\n\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://localhost:44352/api/FuelWises');\n\n            case 2:\n              result = _context.sent;\n              _context.next = 5;\n              return result.json();\n\n            case 5:\n              data = _context.sent;\n              setTips(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  return React.createElement(\"div\", null, Tips.map(function (tip) {\n    var name = tip.name,\n        body = tip.body,\n        id = tip.id;\n    return React.createElement(\"div\", {\n      key: id\n    }, React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, name), React.createElement(\"p\", null, \" \", body));\n  }));\n};\n\nexport default FuelwiseList;","map":{"version":3,"sources":["C:/Users/User/Documents/projectone/api/fuelwiseAPI.js"],"names":["React","useState","useEffect","FuelwiseList","props","Tips","setTips","fetch","result","json","data","map","tip","name","body","id","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBACFH,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,MACnBI,IADmB;AAAA,MACbC,OADa;;AAE1BJ,EAAAA,SAAS,CAAC,YAAM;AACd;AAAA;AAAA,6BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACsBK,KAAK,CAAC,uCAAD,CAD3B;;AAAA;AACOC,cAAAA,MADP;AAAA;AAAA,qBAEoBA,MAAM,CAACC,IAAP,EAFpB;;AAAA;AAEOC,cAAAA,IAFP;AAGCJ,cAAAA,OAAO,CAACI,IAAD,CAAP;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SACI,iCACGL,IAAI,CAACM,GAAL,CAAS,UAAAC,GAAG,EAAI;AAAA,QACRC,IADQ,GACUD,GADV,CACRC,IADQ;AAAA,QACFC,IADE,GACUF,GADV,CACFE,IADE;AAAA,QACIC,EADJ,GACUH,GADV,CACIG,EADJ;AAEf,WACE;AAAK,MAAA,GAAG,EAAEA;AAAV,OACE;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb;AAAV,OAAiCH,IAAjC,CADF,EAEE,oCAAKC,IAAL,CAFF,CADF;AAMD,GARA,CADH,CADJ;AAaC,CAvBL;;AAyBI,eAAeX,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n// import axios from 'axios';\r\n\r\n// const BASE_URL = \"https://localhost:44352/api\";\r\n\r\n// export default function fetchAllFuelWiseApi() {\r\n// axios\r\n//   .get(`${BASE_URL}/fuelwise`)\r\n//   .then(response => response)\r\n//   .catch(error => error.response);\r\n// }\r\n\r\nconst FuelwiseList = props => {\r\n    const [Tips, setTips] = useState([])\r\n    useEffect(() => {\r\n      (async () => {\r\n        const result = await fetch('https://localhost:44352/api/FuelWises')\r\n        const data = await result.json()\r\n        setTips(data)\r\n      })()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n          {Tips.map(tip => {\r\n            const {name, body, id} = tip\r\n            return (\r\n              <div key={id}>\r\n                <p style={{fontWeight: 'bold'}}>{name}</p>\r\n                <p> {body}</p>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    export default FuelwiseList;\r\n"]},"metadata":{},"sourceType":"module"}