{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useFuelWiseActionsContext } from \"./fuelWiseContext\";\nimport { useFuelWiseContext } from \"./fuelWiseContext\"; // import axios from 'axios';\n// const BASE_URL = \"https://localhost:44352/api\";\n// export default function fetchAllFuelWiseApi() {\n// axios\n//   .get(`${BASE_URL}/fuelwise`)\n//   .then(response => response)\n//   .catch(error => error.response);\n// }\n\nvar FuelWiseList = function FuelWiseList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Tips = _useState2[0],\n      setTips = _useState2[1];\n\n  var setFuelWise = useFuelWiseActionsContext();\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setFuelWise(true);\n              _context.next = 3;\n              return fetch('https://localhost:44352/api/FuelWises');\n\n            case 3:\n              result = _context.sent;\n              _context.next = 6;\n              return result.json();\n\n            case 6:\n              data = _context.sent;\n              setTips(data);\n              setFuelWise(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [setFuelWise]);\n  return React.createElement(\"div\", null, Tips.map(function (Tip) {\n    var title = Tip.title,\n        body = Tip.body,\n        id = Tip.id;\n    return React.createElement(\"div\", {\n      key: id\n    }, React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, title), React.createElement(\"p\", null, \" \", body));\n  }));\n};\n\nexport default FuelWiseList;","map":{"version":3,"sources":["C:/Users/User/Documents/projectone/api/fuelwiseAPI.js"],"names":["React","useState","useEffect","useFuelWiseActionsContext","useFuelWiseContext","FuelWiseList","props","Tips","setTips","setFuelWise","fetch","result","json","data","map","Tip","title","body","id","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,yBAAR;AACA,SAASC,kBAAT,4B,CACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBACJL,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,MACrBM,IADqB;AAAA,MACfC,OADe;;AAE5B,MAAMC,WAAW,GAAGN,yBAAyB,EAA7C;AACAD,EAAAA,SAAS,CAAC,YAAM;AACd;AAAA;AAAA,6BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,cAAAA,WAAW,CAAC,IAAD,CAAX;AADD;AAAA,qBAEsBC,KAAK,CAAC,uCAAD,CAF3B;;AAAA;AAEOC,cAAAA,MAFP;AAAA;AAAA,qBAGoBA,MAAM,CAACC,IAAP,EAHpB;;AAAA;AAGOC,cAAAA,IAHP;AAICL,cAAAA,OAAO,CAACK,IAAD,CAAP;AACAJ,cAAAA,WAAW,CAAC,KAAD,CAAX;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAOD,GARQ,EAQN,CAACA,WAAD,CARM,CAAT;AAUA,SACE,iCACGF,IAAI,CAACO,GAAL,CAAS,UAAAC,GAAG,EAAI;AAAA,QACRC,KADQ,GACWD,GADX,CACRC,KADQ;AAAA,QACDC,IADC,GACWF,GADX,CACDE,IADC;AAAA,QACKC,EADL,GACWH,GADX,CACKG,EADL;AAEf,WACE;AAAK,MAAA,GAAG,EAAEA;AAAV,OACE;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb;AAAV,OAAiCH,KAAjC,CADF,EAEE,oCAAKC,IAAL,CAFF,CADF;AAMD,GARA,CADH,CADF;AAaD,CA1BD;;AA4BA,eAAeZ,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useFuelWiseActionsContext} from './fuelWiseContext'\r\nimport { useFuelWiseContext } from './fuelWiseContext'\r\n// import axios from 'axios';\r\n\r\n// const BASE_URL = \"https://localhost:44352/api\";\r\n\r\n// export default function fetchAllFuelWiseApi() {\r\n// axios\r\n//   .get(`${BASE_URL}/fuelwise`)\r\n//   .then(response => response)\r\n//   .catch(error => error.response);\r\n// }\r\n\r\nconst FuelWiseList = props => {\r\n  const [Tips, setTips] = useState([])\r\n  const setFuelWise = useFuelWiseActionsContext()\r\n  useEffect(() => {\r\n    (async () => {\r\n      setFuelWise(true)\r\n      const result = await fetch('https://localhost:44352/api/FuelWises')\r\n      const data = await result.json()\r\n      setTips(data)\r\n      setFuelWise(false)\r\n    })()\r\n  }, [setFuelWise])\r\n\r\n  return (\r\n    <div>\r\n      {Tips.map(Tip => {\r\n        const {title, body, id} = Tip\r\n        return (\r\n          <div key={id}>\r\n            <p style={{fontWeight: 'bold'}}>{title}</p>\r\n            <p> {body}</p>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FuelWiseList\r\n"]},"metadata":{},"sourceType":"module"}