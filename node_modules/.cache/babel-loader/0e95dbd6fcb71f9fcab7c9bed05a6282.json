{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport React from \"react\";\nimport 'antd/dist/antd.css';\n\nvar NormalLoginForm = function NormalLoginForm(props) {\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields(function (err, values) {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  var prefixSelector = getFieldDecorator('prefix', {\n    initialValue: '86'\n  })(React.createElement(Select, {\n    style: {\n      width: 70\n    }\n  }, React.createElement(Option, {\n    value: \"86\"\n  }, \"+86\"), React.createElement(Option, {\n    value: \"87\"\n  }, \"+87\")));\n  return React.createElement(_Form, {\n    onSubmit: handleSubmit,\n    className: \"login-form\"\n  }, React.createElement(_Form.Item, null, getFieldDecorator('username', {\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }]\n  })(React.createElement(_Input, {\n    prefix: React.createElement(_Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    placeholder: \"Username\"\n  }))), React.createElement(_Form.Item, null, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }]\n  })(React.createElement(_Input, {\n    prefix: React.createElement(_Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\"\n  }))), React.createElement(_Form.Item, null, getFieldDecorator('remember', {\n    valuePropName: 'unchecked',\n    initialValue: false\n  })(React.createElement(_Checkbox, null, \"Remember me\")), React.createElement(\"a\", {\n    className: \"login-form-forgot\",\n    href: \"\"\n  }, \"Forgot password\"), React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\"\n  }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n    href: \"\"\n  }, \"register now!\")));\n};\n\nvar WrappedNormalLoginForm = _Form.create({\n  name: 'normal_login'\n})(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["C:/Users/User/Documents/projectone/api/login.tsx"],"names":["React","NormalLoginForm","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","prefixSelector","getFieldDecorator","initialValue","width","rules","required","message","color","valuePropName","WrappedNormalLoginForm","create","name"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,OAAO,oBAAP;;AAMA,IAAMC,eAA2B,GAAG,SAA9BA,eAA8B,CAACC,KAAD,EAAW;AAC7C,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAwC;AAC3DA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,KAAK,CAACI,IAAN,CAAWC,cAAX,CAA0B,UAACC,GAAD,EAAWC,MAAX,EAA2B;AACnD,UAAI,CAACD,GAAL,EAAU;AACRE,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACD;AACF,KAJD;AAKD,GAPD;;AASA,MAAMG,cAAc,GAAGC,iBAAiB,CAAC,QAAD,EAAW;AACjDC,IAAAA,YAAY,EAAE;AADmC,GAAX,CAAjB,CAGrB,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAf,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,WADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,WAFF,CAHqB,CAAvB;AAQA,SACE;AAAM,IAAA,QAAQ,EAAEZ,YAAhB;AAA8B,IAAA,SAAS,EAAC;AAAxC,KACE,0BAAM,IAAN,QACGU,iBAAiB,CAAC,UAAD,EAAa;AAC7BG,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADsB,GAAb,CAAjB,CAGC;AACE,IAAA,MAAM,EAAE;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAzB,MADV;AAEE,IAAA,WAAW,EAAC;AAFd,IAHD,CADH,CADF,EAWE,0BAAM,IAAN,QACGN,iBAAiB,CAAC,UAAD,EAAa;AAC7BG,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADsB,GAAb,CAAjB,CAGC;AACE,IAAA,MAAM,EAAE;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAzB,MADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC;AAHd,IAHD,CADH,CAXF,EAsBE,0BAAM,IAAN,QACGN,iBAAiB,CAAC,UAAD,EAAa;AAC7BO,IAAAA,aAAa,EAAE,WADc;AAE7BN,IAAAA,YAAY,EAAE;AAFe,GAAb,CAAjB,CAGE,mDAHF,CADH,EAKE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAiC,IAAA,IAAI,EAAC;AAAtC,uBALF,EAQE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,SAAS,EAAC;AAAnD,cARF,SAWK;AAAG,IAAA,IAAI,EAAC;AAAR,qBAXL,CAtBF,CADF;AAsCD,CAxDD;;AA0DA,IAAMO,sBAAsB,GAAG,MAAKC,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAsCtB,eAAtC,CAA/B;;AAEA,eAAeoB,sBAAf","sourcesContent":["import React, { FC } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\ninterface IProps {\r\n  readonly form?: any;\r\n}\r\n\r\nconst NormalLoginForm: FC<IProps> = (props) => {\r\n  const handleSubmit = (e: { preventDefault: () => void; }) => {\r\n    e.preventDefault();\r\n    props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  const prefixSelector = getFieldDecorator('prefix', {\r\n    initialValue: '86',\r\n  })(\r\n    <Select style={{ width: 70 }}>\r\n      <Option value=\"86\">+86</Option>\r\n      <Option value=\"87\">+87</Option>\r\n    </Select>,\r\n  );\r\n  return (\r\n    <Form onSubmit={handleSubmit} className=\"login-form\">\r\n      <Form.Item>\r\n        {getFieldDecorator('username', {\r\n          rules: [{ required: true, message: 'Please input your username!' }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Username\"\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator('password', {\r\n          rules: [{ required: true, message: 'Please input your Password!' }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator('remember', {\r\n          valuePropName: 'unchecked',\r\n          initialValue: false,\r\n        })(<Checkbox>Remember me</Checkbox>)}\r\n        <a className=\"login-form-forgot\" href=\"\">\r\n          Forgot password\r\n          </a>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n          </Button>\r\n        Or <a href=\"\">register now!</a>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm;"]},"metadata":{},"sourceType":"module"}