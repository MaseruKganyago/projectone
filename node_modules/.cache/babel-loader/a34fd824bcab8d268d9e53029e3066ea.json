{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport React from 'react';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nvar BASE_URL = \"https://localhost:44352/api/Account\";\nexport default function RegisterAPI(props) {\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var data = {\n      email: event.target.email.value,\n      password: event.target.password.value,\n      confirmpassword: event.target.confirmpassword.value\n    };\n    axios.post(\"\".concat(BASE_URL, \"/Register\"), data).then(function (response) {\n      if (response.status == 200) window.location.href = \"register/registration-succesful\";\n      console.log(response);\n    }).catch(function (err) {\n      return console.log(err.response);\n    });\n  };\n\n  var getFieldDecorator = props.form.getFieldDecorator;\n  var formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 8\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 16\n      }\n    }\n  };\n  var tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 8\n      }\n    }\n  };\n  return React.createElement(_Form, _extends({}, formItemLayout, {\n    onSubmit: handleSubmit\n  }), React.createElement(_Form.Item, {\n    label: \"E-mail\"\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }]\n  })(React.createElement(_Input, null))), React.createElement(_Form.Item, {\n    label: \"Password\",\n    hasFeedback: true\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      validator: this.validateToNextPassword\n    }]\n  })(React.createElement(_Input.Password, null))), React.createElement(_Form.Item, {\n    label: \"Confirm Password\",\n    hasFeedback: true\n  }, getFieldDecorator('confirm', {\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, {\n      validator: this.compareToFirstPassword\n    }]\n  })(React.createElement(_Input.Password, {\n    onBlur: this.handleConfirmBlur\n  }))), React.createElement(_Form.Item, tailFormItemLayout, React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Register\")));\n}\n{\n  /* <form onSubmit={handleSubmit}>\r\n  <div className=\"register\">\r\n     <div className=\"base-container\">\r\n         <div className=\"header\">TransportWise</div>\r\n         <div className=\"header2\">Register here:</div>\r\n         <div className=\"image\">\r\n             <img src=\"/static/images/town.png\" />\r\n         </div>\r\n         <div className=\"content\">\r\n             <div className=\"form\">\r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"email\">Email</label>\r\n                     <input type=\"text\" id=\"email\" placeholder=\"Enter Email\" />\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"password\">Password</label>\r\n                     <input type=\"password\" id=\"password\" placeholder=\"Enter Password\" />\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"password\">Verify Password</label>\r\n                     <input type=\"password\" id=\"confirmpassword\" placeholder=\"Enter Password again\" />\r\n                 </div>\r\n             </div>\r\n         </div>\r\n         <div className=\"footer\">\r\n             <button type=\"submit\" className=\"btnAll\">Register</button>\r\n         </div>\r\n     </div>\r\n  </div>\r\n  </form>  */\n}","map":{"version":3,"sources":["C:/Users/User/Documents/projectone/api/registerAPI.tsx"],"names":["React","axios","BASE_URL","RegisterAPI","props","handleSubmit","event","preventDefault","data","email","target","value","password","confirmpassword","post","then","response","status","window","location","href","console","log","catch","err","getFieldDecorator","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","type","message","required","validator","validateToNextPassword","compareToFirstPassword","handleConfirmBlur"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\r\nimport axios from 'axios';\r\nimport { Alert } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, } from 'antd';\r\n\r\n\r\n  \r\n\r\n\r\nconst BASE_URL = \"https://localhost:44352/api/Account\";\r\n\r\nexport default function RegisterAPI(props) {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = {\r\n            email: event.target.email.value,\r\n            password: event.target.password.value,\r\n            confirmpassword: event.target.confirmpassword.value\r\n        }\r\n        axios.post(`${BASE_URL}/Register`,data)\r\n        .then(response => {\r\n            if(response.status == 200)\r\n                window.location.href = \"register/registration-succesful\";\r\n                console.log(response)\r\n        })\r\n        .catch(err => console.log(err.response))\r\n    }  \r\n    const { getFieldDecorator } = props.form;\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 8 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n      };\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n    return (\r\n        <Form {...formItemLayout} onSubmit={handleSubmit}>\r\n        <Form.Item label=\"E-mail\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Password\" hasFeedback>\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator('confirm', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n}\r\n\r\n        {/* <form onSubmit={handleSubmit}>\r\n        <div className=\"register\">\r\n            <div className=\"base-container\">\r\n                <div className=\"header\">TransportWise</div>\r\n                <div className=\"header2\">Register here:</div>\r\n                <div className=\"image\">\r\n                    <img src=\"/static/images/town.png\" />\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"text\" id=\"email\" placeholder=\"Enter Email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" placeholder=\"Enter Password\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Verify Password</label>\r\n                            <input type=\"password\" id=\"confirmpassword\" placeholder=\"Enter Password again\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <button type=\"submit\" className=\"btnAll\">Register</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>  */}\r\n"]},"metadata":{},"sourceType":"module"}